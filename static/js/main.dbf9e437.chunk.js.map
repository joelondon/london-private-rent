{"version":3,"sources":["Map.jsx","utils.js","CategoryChooser.jsx","RangeSlider.jsx","Rugplot.jsx","Boxplot.jsx","EnhancedTable.jsx","App.jsx","index.js","map-style.js"],"names":["Map","props","viewport","setViewport","category","data","setData","hoveredFeature","setHoveredFeature","setClickedFeature","budgetRange","_useState","useState","_useState2","Object","slicedToArray","mapboxFilterBudgetRange","setMapboxFilterBudgetRange","_useState3","_useState4","filterHighlight","setFilterHighlight","useEffect","input","document","querySelector","inputParent","parentNode","onblur","style","boxShadow","overflow","onfocus","tabIndex","accessor","features","featureCollection","scale","scaleQuantile","domain","map","range","type","f","value","properties","objectSpread","percentile","updatePercentiles","undefined","district","react_default","a","createElement","height","esm","assign","width","mapStyle","onViewportChange","mapboxApiAccessToken","onHover","event","hoveredArea","find","layer","id","onClick","clickedFeature","scrollZoom","position","right","bottom","showCompass","dataLayer","colour","filter","highlightLayer","useStyles","makeStyles","theme","toggleContainer","margin","spacing","text-align","color","palette","action","active","CategoryChooser","classes","Grid","item","xs","sm","md","className","Typography","variant","display","gutterBottom","ToggleButtonGroup","aria-labelledby","exclusive","onChange","val","setCategory","aria-label","categories","cat","i","ToggleButton","key","name","root","pad","padding","valuetext","concat","RangeSlider","Slider","newValue","valueLabelDisplay","getAriaValueText","min","step","max","title","Rugplot","d3Container","useRef","current","getMedian","geojsonFeature","el","svg","d3","xQuantile","viridis","colormap","nshades","top","left","selectAll","xPos","Math","apply","toConsumableArray","getBoundingClientRect","callout","g","path","join","attr","text","call","split","d","_","_text$node$getBBox","node","getBBox","y","w","h","enter","append","feature","length","update","transition","exit","remove","format","select","tickFormat","tooltip","on","ref","Boxplot","postcode","postcodeData","yPos","boxEnter","selection","dataset","half","gradient","medians","sort","b","stop","round","borough","textPos","boxUpdate","lines","descendingComparator","orderBy","createDataRow","obj","predicate","fromEntries","entries","_ref","_ref2","includes","EnhancedTableHead","order","onRequestSort","headCells","keys","indexOf","numeric","isNumeric","disablePadding","label","createHeadCells","TableHead","TableRow","headCell","TableCell","align","sortDirection","TableSortLabel","direction","property","visuallyHidden","useToolbarStyles","paddingLeft","paddingRight","highlight","secondary","main","backgroundColor","lighten","light","primary","dark","flex","EnhancedTableToolbar","numSelected","Toolbar","clsx","defineProperty","component","Tooltip","IconButton","FilterList_default","paper","marginBottom","table","minWidth","border","clip","EnhancedTable","rows","_React$useState","React","_React$useState2","setOrder","_React$useState3","_React$useState4","setOrderBy","_React$useState5","_React$useState6","selected","setSelected","_React$useState7","_React$useState8","page","setPage","_React$useState9","dense","_React$useState11","_React$useState12","rowsPerPage","setRowsPerPage","emptyRows","Paper","EnhancedTable_EnhancedTableToolbar","TableContainer","Table","size","onSelectAllClick","target","checked","newSelecteds","n","rowCount","TableBody","array","comparator","stabilizedThis","index","stableSort","getComparator","slice","row","isItemSelected","labelId","hover","selectedIndex","newSelected","handleClick","role","aria-checked","values","cell","scope","colSpan","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","geocoderApiOptions","country","proximity","longitude","latitude","bbox","App","setColour","_useState5","_useState6","priceRange","setPriceRange","_useState7","_useState8","setBudgetRange","_useState9","_useState10","_useState11","_useState12","_useState13","_useState14","_useState15","WebMercatorViewport","zoom","bearing","pitch","_useState16","_onViewportChange","_viewport$fitBounds","fitBounds","newViewport","transitionDuration","transitionInterpolator","FlyToInterpolator","transitionEasing","easeCubic","_fitLondonBounds","mins","maxs","prefersDarkMode","useMediaQuery","useMemo","createMuiTheme","ThemeProvider","Map_Map","background","overflowX","overflowY","index_es","inputPlaceholder","accessToken","onSelect","result","shift","matchingPostcodes","context","res","center","_handleGeocoderSelect","showLoader","CategoryChooser_CategoryChooser","RangeSlider_RangeSlider","Rugplot_Rugplot","Boxplot_Boxplot","EnhancedTable_EnhancedTable","rootElement","getElementById","ReactDOM","render","__webpack_require__","__webpack_exports__","colormap__WEBPACK_IMPORTED_MODULE_0__","colormap__WEBPACK_IMPORTED_MODULE_0___default","scheme","beforeId","paint","fill-color","stops","eval","fill-opacity","fill-extrusion-color","fill-extrusion-height"],"mappings":"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","file":"static/js/main.dbf9e437.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport MapGL, { Source, Layer, NavigationControl } from 'react-map-gl'\nimport { dataLayer, highlightLayer } from './map-style'\nimport 'mapbox-gl/dist/mapbox-gl.css'\nimport { updatePercentiles } from './utils'\n\nconst MAPBOX_TOKEN =\n  'pk.eyJ1IjoiaHAtbnVuZXMiLCJhIjoiY2pqNHAxaHIxMDA3aTNrbW15OGx2NW4ybiJ9.pHzT2FAtpO-Xhnc3PzJsFA'\n\nexport const Map = props => {\n  const {\n    viewport,\n    setViewport,\n    category,\n    data,\n    setData,\n    hoveredFeature,\n    setHoveredFeature,\n    setClickedFeature,\n    budgetRange\n  } = props\n  const [mapboxFilterBudgetRange, setMapboxFilterBudgetRange] = useState(null)\n\n  const [filterHighlight, setFilterHighlight] = useState(['in', 'district', ''])\n\n  useEffect(() => {\n    if (budgetRange !== null)\n      setMapboxFilterBudgetRange([\n        'all',\n        ['>=', category + '-pc_median', budgetRange[0]],\n        ['<=', category + '-pc_median', budgetRange[1]]\n      ])\n  }, [budgetRange, category])\n\n  const _onViewportChange = viewport => setViewport(viewport)\n\n  // FOR KEYBOARD USERS: HIGHLIGHT MAP WHEN TABBED TO, RUN THIS EFFECT ONCE ONLY\n  useEffect(() => {\n    const input = document.querySelector('.mapboxgl-canvas')\n    const inputParent = input.parentNode.parentNode.parentNode.parentNode\n    input.onblur = inputBlur\n    input.onfocus = inputFocus\n    inputParent.tabIndex = -1\n\n    function inputBlur() {\n      document.querySelector('.overlays').style.boxShadow = ''\n      document.querySelector('#root').style.overflow = 'scroll'\n    }\n\n    function inputFocus() {\n      document.querySelector('.overlays').style.boxShadow =\n        'inset 0 0 2px 2px #0096ff'\n      document.querySelector('#root').style.overflow = 'hidden'\n    }\n  }, []) // empty dep array = run once\n\n  useEffect(() => {\n    setData(updatePercentiles(f => f.properties[category + '-pc_median']))\n  }, [category]) // eslint-disable-line\n\n  useEffect(() => {\n    if (hoveredFeature !== null && hoveredFeature !== undefined) {\n      setFilterHighlight(['in', 'district', hoveredFeature.properties.district])\n    }\n  }, [hoveredFeature]) // eslint-disable-line\n\n  const _onHover = event => {\n    const { features } = event\n    const hoveredArea = features && features.find(f => f.layer.id === 'data')\n\n    if (hoveredArea !== null && hoveredArea !== undefined) {\n      setHoveredFeature(hoveredArea)\n      setClickedFeature(hoveredArea)\n    }\n  }\n\n  const _onClick = event => {\n    const { features } = event\n    const clickedFeature = features && features.find(f => f.layer.id === 'data')\n    setClickedFeature(clickedFeature)\n  }\n\n  return (\n    <div style={{ height: '100%' }}>\n      <MapGL\n        {...viewport}\n        category={props.category}\n        width=\"50%\"\n        height=\"100vh\"\n        mapStyle=\"./os_night-no-label.json\"\n        onViewportChange={_onViewportChange}\n        mapboxApiAccessToken={MAPBOX_TOKEN}\n        onHover={_onHover}\n        onClick={_onClick}\n        scrollZoom={false}\n      >\n        <div style={{ position: 'absolute', right: '1rem', bottom: '1rem' }}>\n          <NavigationControl showCompass={false} />\n        </div>\n        <Source type=\"geojson\" data={data}>\n          <Layer\n            {...dataLayer(props.colour)}\n            filter={mapboxFilterBudgetRange}\n          />\n          <Layer {...highlightLayer(props.colour)} filter={filterHighlight} />\n        </Source>\n      </MapGL>\n    </div>\n  )\n}\n","import { range } from 'd3-array'\nimport { scaleQuantile } from 'd3-scale'\n// import featureCollection from './data/london-private-rents-detailed.json'\nimport featureCollection from './data/london-private-rents.json'\n\n// ATTEMPT TO COMBINE JSON AND CSV\n// import featureCollection from './data/london-postcode-districts.json'\n// import csv from './data/london-private-rents.csv'\n\nexport function updatePercentiles(accessor) {\n  let { features } = featureCollection\n\n  // d3.csv(csv, d3.autoType).then(data => {\n  // features = features.map(feature => {\n  //   feature.properties = {\n  //     ...feature.properties,\n  //     ...data\n  //       .filter(district => district.district === feature.properties.district)\n  //       .pop()\n  //   }\n  //   if (feature) return feature\n  // })\n\n  const scale = scaleQuantile()\n    .domain(features.map(accessor))\n    .range(range(10))\n\n  const returnVal = {\n    type: 'FeatureCollection',\n    features: features.map(f => {\n      const value = accessor(f)\n      const properties = {\n        ...f.properties,\n        value,\n        percentile: scale(value)\n      }\n      return { ...f, properties }\n    })\n  }\n  return returnVal\n  // })\n}\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport ToggleButton from '@material-ui/lab/ToggleButton'\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup'\nimport { Grid, Typography } from '@material-ui/core'\n\nconst useStyles = makeStyles(theme => ({\n  toggleContainer: {\n    margin: theme.spacing(2, 0),\n    'text-align': 'center',\n    color: theme.palette.action.active\n  }\n}))\n\nexport const CategoryChooser = props => {\n  const classes = useStyles()\n\n  return (\n    <Grid item xs={12} sm={12} md={12}>\n      <div className={classes.toggleContainer}>\n        <Typography\n          id=\"range-label\"\n          variant=\"button\"\n          display=\"block\"\n          gutterBottom\n        >\n          Number of rooms\n        </Typography>\n        <ToggleButtonGroup\n          aria-labelledby=\"range-label\"\n          value={props.category}\n          exclusive\n          onChange={(event, val) => props.setCategory(val)}\n          aria-label=\"text alignment\"\n        >\n          {props.categories.map((cat, i) => (\n            <ToggleButton key={i} value={cat} name={cat}>\n              {cat}\n            </ToggleButton>\n          ))}\n        </ToggleButtonGroup>\n      </div>\n    </Grid>\n  )\n}\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Typography, Slider } from '@material-ui/core'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    'text-align': 'center',\n    margin: '1em 1em',\n    color: theme.palette.action.active\n  },\n  pad: {\n    padding: '2em 0 0'\n  }\n}))\n\nfunction valuetext(value) {\n  return `${value}`\n}\n\nexport const RangeSlider = props => {\n  const classes = useStyles(props.theme)\n\n  const handleChange = (event, newValue) => {\n    props.onChange(newValue)\n  }\n\n  return (\n    <div className={classes.root}>\n      <Slider\n        style={{ padding: '3rem 0 0' }}\n        value={props.value}\n        onChange={handleChange}\n        valueLabelDisplay=\"on\"\n        aria-labelledby=\"range-slider\"\n        getAriaValueText={valuetext}\n        min={props.min}\n        step={10}\n        max={props.max}\n      />\n      <Typography id=\"range-slider\" variant=\"button\" gutterBottom>\n        {props.title}\n      </Typography>\n    </div>\n  )\n}\n","import React, { useRef, useEffect } from 'react'\nimport * as d3 from 'd3'\nimport colormap from 'colormap'\n\nexport const Rugplot = props => {\n  /* The useRef Hook creates a variable that \"holds on\" to a value across rendering\n  passes. In this case it will hold our component's SVG DOM element. It's\n  initialized null and React will assign it later (see the return statement) */\n  const d3Container = useRef(null)\n\n  const {\n    data,\n    category,\n    hoveredFeature,\n    setHoveredFeature,\n    setClickedFeature\n  } = props\n\n  /* The useEffect Hook is for running side effects outside of React,\n  for instance inserting elements into the DOM using D3 */\n  useEffect(\n    () => {\n      if (data && d3Container.current) {\n        // HELPER for acessing geojson properties\n        const getMedian = geojsonFeature =>\n          geojsonFeature.properties[category + '-pc_median']\n\n        const features = data.features.filter(el => getMedian(el) !== undefined)\n\n        const svg = d3.select(d3Container.current)\n\n        const xQuantile = d3\n          .scaleQuantile()\n          .domain(features.map(el => getMedian(el)))\n          .range(d3.range(10))\n        const viridis = colormap({ colormap: 'viridis', nshades: 10 }).map(\n          (el, i) => [i, el]\n        )\n\n        const margin = { top: 0, right: 32, bottom: 0, left: 0 }\n\n        svg.selectAll('rect').data(features)\n\n        const xPos = d3\n          .scaleLinear()\n          .domain([\n            Math.min(\n              ...data.features\n                .map(el => el.properties[category + '-pc_lower'])\n                .filter(el => el !== undefined)\n            ),\n            Math.max(\n              ...data.features\n                .map(el => el.properties[category + '-pc_upper'])\n                .filter(el => el !== undefined)\n            )\n          ])\n          .range([\n            margin.left,\n            d3Container.current.getBoundingClientRect().width - margin.right\n          ])\n\n        const callout = (g, value) => {\n          if (!value) return g.style('display', 'none')\n\n          g.style('display', null)\n            .style('pointer-events', 'none')\n            .style('font', '10px sans-serif')\n\n          const path = g\n            .selectAll('path')\n            .data([null])\n            .join('path')\n            .attr('fill', 'white')\n\n          const text = g\n            .selectAll('text')\n            .data([null])\n            .join('text')\n            .call(text =>\n              text\n                .selectAll('tspan')\n                .data((value + '').split(/\\n/))\n                .join('tspan')\n                .attr('x', 0)\n                .attr('y', (d, i) => `${i * 1.1}em`)\n                .style('font-weight', (_, i) => (i ? null : 'bold'))\n                .text(d => d)\n            )\n\n          const { y, width: w, height: h } = text.node().getBBox()\n\n          text.attr('transform', `translate(${-w / 2},${y * 2})`)\n          path.attr(\n            'd',\n            `M${-w / 2 - 10},5H-5l5,5l5,-5H${w / 2 + 10}v-${h + 20}h-${w + 20}z`\n          )\n          path.attr('transform', `translate(0,${y * 1.1})`)\n        }\n\n        svg\n          .selectAll('rect')\n          .data(features)\n          .join(\n            enter => {\n              enter\n                .append('rect')\n                .attr(\n                  'fill',\n                  feature => viridis[xQuantile(getMedian(feature))][1]\n                )\n                .attr('fill-opacity', 0.9)\n                .attr('x', feature => xPos(getMedian(feature)))\n                .attr('width', feature => 2)\n                .attr('y', feature => (feature.length !== 0 ? 0 : 0))\n                .attr('height', 20)\n            },\n            update => {\n              update\n                .transition()\n                .attr('x', feature => xPos(getMedian(feature)))\n                .attr(\n                  'fill',\n                  feature => viridis[xQuantile(getMedian(feature))][1]\n                )\n            },\n            exit => exit.remove()\n          )\n\n        const format = d3.format('.2s')\n\n        const xAxis = svg =>\n          svg\n            .select('g#axis')\n            .attr('transform', `translate(0,20)`)\n            .attr('style', `color:white`)\n            .call(d3.axisBottom(xPos).tickFormat(d => `£${format(d)}`))\n        svg.call(xAxis)\n\n        const tooltip = svg.select('g#tooltip')\n\n        svg\n          .selectAll('rect')\n          .on('touchmove mousemove', feature => {\n            tooltip\n              .attr('transform', `translate(${xPos(getMedian(feature))},0)`)\n              .call(callout, feature.properties['district'])\n            setHoveredFeature(feature)\n            setClickedFeature(feature)\n          })\n          .on('touchend mouseleave', () => tooltip.call(callout, null))\n          .on('click', feature => setClickedFeature(feature))\n\n        if (hoveredFeature) {\n          tooltip.call(callout, null)\n          tooltip\n            .attr(\n              'transform',\n              `translate(${xPos(getMedian(hoveredFeature))},0)`\n            )\n            .call(callout, hoveredFeature.properties['district'])\n        } else {\n          // ON FIRST LOAD (NO HOVER) CLICK 'SE1' \n          const feature = features.filter(\n            f => f.properties.district === 'SE1'\n          )[0]\n          setHoveredFeature(feature)\n          setClickedFeature(feature)\n        }\n      }\n    },\n    /*\n    useEffect has a dependency array (below). It's a list of dependency\n    variables for this useEffect block. The block will run after mount\n    and whenever any of these variables change. We still have to check\n    if the variables are valid, but we do not have to compare old props\n    to next props to decide whether to rerender.\n  */ [\n      data,\n      category,\n      hoveredFeature,\n      setHoveredFeature\n    ]\n  )\n\n  const style = {\n    width: '100%',\n    margin: '0 1em',\n    height: '38px',\n    overflow: 'visible',\n    position: 'relative'\n  }\n  return (\n    <svg style={style} ref={d3Container}>\n      <g id=\"tooltip\" />\n      <g id=\"axis\" />\n    </svg>\n  )\n}\n","import React, { useRef, useEffect } from 'react'\nimport * as d3 from 'd3'\nimport colormap from 'colormap'\n\nexport const Boxplot = props => {\n  /* The useRef Hook creates a variable that \"holds on\" to a value across rendering\n  passes. In this case it will hold our component's SVG DOM element. It's\n  initialized null and React will assign it later (see the return statement) */\n  const d3Container = useRef(null)\n\n  const { min, max, data, category, clickedFeature } = props\n\n  /* The useEffect Hook is for running side effects outside of React,\n  for instance inserting elements into the DOM using D3 */\n  useEffect(\n    () => {\n      if (data && d3Container.current && clickedFeature) {\n        const { properties } = clickedFeature\n        const svg = d3.select(d3Container.current)\n        const postcode = {}\n        postcode.postcodeData = [\n          [\n            properties[`${category}-pc_lower`],\n            properties[`${category}-pc_median`],\n            properties[`${category}-pc_upper`]\n          ],\n          [\n            properties[`${category}-borough_lower`],\n            properties[`${category}-borough_median`],\n            properties[`${category}-borough_upper`]\n          ],\n          [\n            properties[`${category}-london_lower`],\n            properties[`${category}-london_median`],\n            properties[`${category}-london_upper`]\n          ]\n        ]\n        const height = 100\n        const yPos = i => i * 30 + 10\n        const textPos = i => yPos(i) + 4\n        const margin = { top: 0, right: 32, bottom: 0, left: 0 }\n        const xPos = d3\n          .scaleLinear()\n          .domain([min, max])\n          .range([\n            margin.left,\n            d3Container.current.getBoundingClientRect().width - margin.right\n          ])\n        const format = d3.format('.2s')\n        const xAxis = g =>\n          g\n            .select('g.xAxis')\n            .attr('transform', `translate(0,${height})`)\n            .attr('style', `color:white`)\n            .call(d3.axisBottom(xPos).tickFormat(d => `£${format(d)}`))\n\n        const reverseTicks = g =>\n          g\n            .selectAll('.xAxis .tick line')\n            .attr('y2', '0')\n            .attr('y1', -120)\n            .attr('stroke-opacity', 0.5)\n            .attr('stroke-dasharray', '2,2')\n            .attr('fill', 'white')\n        const decile = 10\n        const getMedian = geojsonFeature =>\n          geojsonFeature.properties[category + '-pc_median']\n\n        const viridis = colormap({ colormap: 'viridis', nshades: decile }).map(\n          (el, i) => [i, el]\n        )\n\n        svg.call(xAxis)\n        svg.call(reverseTicks)\n\n        const boxEnter = (selection, dataset, className, half) => {\n          // could be log\n          let gradientIdentifier = 'gradientLinear'\n\n          const defs = selection.append('defs')\n          const gradient = defs\n            .append('linearGradient')\n            .attr('id', gradientIdentifier)\n            .attr('x1', '0%')\n            .attr('y1', '0%')\n            .attr('x2', '100%')\n            .attr('y2', '0%')\n            .attr('gradientUnits', 'userSpaceOnUse')\n\n          gradient\n            .append('stop')\n            .attr('class', 'start')\n            .attr('offset', '0%')\n            .attr('stop-color', '#440154')\n\n          // linearGradient stops\n          const medians = data.features\n            .map(feature => getMedian(feature))\n            .filter(el => el !== undefined)\n            .sort((a, b) => a - b)\n\n          const stop = Math.round(medians.length / decile)\n          for (let i = 1; i < decile; i = i + 1) {\n            gradient\n              .append('stop')\n              .attr('class', 'end')\n              .attr(\n                'offset',\n                (xPos(medians[i * stop]) /\n                  d3Container.current.getBoundingClientRect().width) *\n                  100 +\n                  '%'\n              )\n              .attr('stop-color', viridis[i][1])\n          }\n\n          selection\n            .append('line')\n            .attr('stroke-width', `20px`)\n            .attr('stroke', `url(#${gradientIdentifier})`)\n            .attr('class', className)\n            .attr('y1', (dataset, i) => yPos(i))\n            .attr('y2', (dataset, i) => yPos(i))\n            .transition()\n            .attr('x1', dataset =>\n              half === 1 ? xPos(dataset[0]) : xPos(dataset[2])\n            )\n            .attr('x2', dataset =>\n              half === 1 ? xPos(dataset[1]) - 0.25 : xPos(dataset[1]) + 0.25\n            )\n\n          if (half === 2) {\n            selection\n              .append('text')\n              .text((d, i) => {\n                switch (i) {\n                  case 0:\n                    return properties.district\n                  case 1:\n                    return properties.borough\n                  default:\n                    return 'London'\n                }\n              })\n              .attr('class', 'boxLabel')\n              .attr('x', d => xPos(d[2]) + 2)\n              .attr('y', (d, i) => textPos(i))\n              .style('text-anchor', 'start')\n              .style('fill', 'white')\n          }\n\n          return selection\n        }\n\n        const boxUpdate = (selection, dataset, half) => {\n          selection\n            .transition()\n            .attr('x1', dataset =>\n              half === 1 ? xPos(dataset[0]) : xPos(dataset[2])\n            )\n            .attr('x2', dataset =>\n              half === 1 ? xPos(dataset[1]) - 0.25 : xPos(dataset[1]) + 0.25\n            )\n\n          if (half === 2) {\n            svg\n              .selectAll('text.boxLabel')\n              .transition()\n              .attr('x', (d, i) => {\n                if (dataset[i][1] > max / 2) {\n                  return xPos(dataset[i][0] - 2)\n                } else {\n                  return xPos(dataset[i][2] + 2)\n                }\n              })\n              .style('text-anchor', (d, i) => {\n                if (dataset[i][1] > max / 2) {\n                  return 'end'\n                } else {\n                  return 'start'\n                }\n              })\n              .text((d, i) => {\n                switch (i) {\n                  case 0:\n                    return properties.district\n                  case 1:\n                    return properties.borough\n                  default:\n                    return 'London'\n                }\n              })\n          }\n\n          return selection\n        }\n\n        const lines = (className, half) => {\n          svg\n            .selectAll('line.' + className, 'text')\n            .data(postcode.postcodeData)\n            .join(\n              enter => {\n                enter.call(boxEnter, postcode.postcodeData, className, half)\n              },\n              update => {\n                update.call(boxUpdate, postcode.postcodeData, half)\n              },\n              exit => exit.remove()\n            )\n        }\n        lines('left', 1)\n        lines('right', 2)\n      }\n    },\n    /*\n      useEffect has a dependency array (below). It's a list of dependency\n      variables for this useEffect block. The block will run after mount\n      and whenever any of these variables change. We still have to check\n      if the variables are valid, but we do not have to compare old props\n      to next props to decide whether to rerender.\n    */ [\n      data,\n      category,\n      clickedFeature\n    ]\n  )\n\n  const style = {\n    width: '100%',\n    margin: '0 1em',\n    height: 'auto',\n    overflow: 'visible',\n    position: 'relative'\n  }\n  return (\n    <svg style={style} ref={d3Container}>\n      <g className=\"xAxis\" />\n    </svg>\n  )\n}\n","import isNumeric from 'fast-isnumeric'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport clsx from 'clsx'\nimport { lighten, makeStyles } from '@material-ui/core/styles'\nimport FilterListIcon from '@material-ui/icons/FilterList'\n\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TablePagination,\n  TableRow,\n  TableSortLabel,\n  Toolbar,\n  Typography,\n  Paper,\n  IconButton,\n  Tooltip\n} from '@material-ui/core'\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1\n  }\n  return 0\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy)\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index])\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0])\n    if (order !== 0) return order\n    return a[1] - b[1]\n  })\n  return stabilizedThis.map(el => el[0])\n}\n\nfunction createHeadCells(properties, category) {\n  const returnVal = Object.keys(properties)\n    .filter(el => el.indexOf(category) > -1)\n    .map(el => ({\n      id: el,\n      numeric: isNumeric(properties[el]),\n      disablePadding: true,\n      label: el\n    }))\n  return returnVal\n}\n\nfunction createDataRow(properties, category) {\n  Object.filter = (obj, predicate) =>\n    Object.fromEntries(Object.entries(obj).filter(predicate))\n  return Object.filter(properties, ([key, val]) => key.includes(category))\n}\n\nfunction EnhancedTableHead(props) {\n  if (!props.data) {\n    return null\n  }\n\n  const { data, category, classes, order, orderBy, onRequestSort } = props\n  const createSortHandler = property => event => {\n    onRequestSort(event, property)\n  }\n\n  const headCells = createHeadCells(data.features[0].properties, category)\n\n  return (\n    <TableHead>\n      <TableRow>\n        {headCells.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  )\n}\n\nEnhancedTableHead.propTypes = {\n  data: PropTypes.object.isRequired,\n  category: PropTypes.string.isRequired,\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired\n}\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1)\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85)\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark\n        },\n  title: {\n    flex: '1 1 100%'\n  }\n}))\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles()\n  const { numSelected } = props\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography\n          className={classes.title}\n          color=\"inherit\"\n          variant=\"subtitle1\"\n          component=\"div\"\n        >\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography\n          className={classes.title}\n          variant=\"h6\"\n          id=\"tableTitle\"\n          component=\"div\"\n        >\n          Data\n        </Typography>\n      )}\n\n      <Tooltip title=\"Filter list\">\n        <IconButton aria-label=\"filter list\">\n          <FilterListIcon />\n        </IconButton>\n      </Tooltip>\n    </Toolbar>\n  )\n}\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%'\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2)\n  },\n  table: {\n    minWidth: 750\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1\n  }\n}))\n\nexport const EnhancedTable = props => {\n  const { data, category, clickedFeature } = props\n\n  if (!props.data) {\n    return null\n  }\n\n  let rows\n  if (clickedFeature !== null && clickedFeature !== undefined) {\n    rows = [createDataRow(clickedFeature.properties, category)]\n  } else {\n    rows = data.features.map(el => createDataRow(el.properties, category))\n  }\n\n  const classes = useStyles()\n  const [order, setOrder] = React.useState('asc')\n  const [orderBy, setOrderBy] = React.useState('Room-district')\n  const [selected, setSelected] = React.useState([])\n  const [page, setPage] = React.useState(0)\n  const [dense] = React.useState(false)\n  const [rowsPerPage, setRowsPerPage] = React.useState(5)\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc'\n    setOrder(isAsc ? 'desc' : 'asc')\n    setOrderBy(property)\n  }\n\n  const handleSelectAllClick = event => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map(n => n.name)\n      setSelected(newSelecteds)\n      return\n    }\n    setSelected([])\n  }\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name)\n    let newSelected = []\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name)\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1))\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1))\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      )\n    }\n\n    setSelected(newSelected)\n  }\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage)\n  }\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10))\n    setPage(0)\n  }\n\n  const isSelected = name => selected.indexOf(name) !== -1\n\n  const emptyRows =\n    rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage)\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar numSelected={selected.length} />\n        <TableContainer>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? 'small' : 'medium'}\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              data={data}\n              category={category}\n              classes={classes}\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n              {stableSort(rows, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  const isItemSelected = isSelected(row[index])\n                  const labelId = `enhanced-table-checkbox-${index}`\n                  return (\n                    <TableRow\n                      hover\n                      onClick={event => handleClick(event, row[index])}\n                      role=\"checkbox\"\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={index}\n                      selected={isItemSelected}\n                    >\n                      {Object.values(row).map((cell, index) => {\n                        let props = {\n                          key: index,\n                          align: 'right'\n                        }\n                        if (index > 0)\n                          props = {\n                            ...props,\n                            component: 'th',\n                            id: labelId,\n                            scope: 'row',\n                            padding: 'checkbox'\n                          }\n\n                        return <TableCell {...props}>{cell}</TableCell>\n                      })}\n                    </TableRow>\n                  )\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n    </div>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport { Map } from './Map'\nimport { CategoryChooser } from './CategoryChooser'\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles'\nimport { RangeSlider } from './RangeSlider'\nimport { Rugplot } from './Rugplot'\nimport { Boxplot } from './Boxplot'\nimport { EnhancedTable } from './EnhancedTable'\nimport { useMediaQuery } from '@material-ui/core'\nimport { FlyToInterpolator, WebMercatorViewport } from 'react-map-gl'\nimport { easeCubic } from 'd3'\nimport MatGeocoder from 'react-mui-mapbox-geocoder'\n\n// import whyDidYouRender from '@welldone-software/why-did-you-render'\n\n// whyDidYouRender(React, {\n//   onlyLogs: true,\n//   titleColor: 'green',\n//   diffNameColor: 'darkturquoise'\n// })\n\n// Rugplot.whyDidYouRender = true\n// Map.whyDidYouRender = true\n\nconst MAPBOX_TOKEN =\n  'pk.eyJ1IjoiaHAtbnVuZXMiLCJhIjoiY2pqNHAxaHIxMDA3aTNrbW15OGx2NW4ybiJ9.pHzT2FAtpO-Xhnc3PzJsFA'\n\nconst geocoderApiOptions = {\n  country: 'gb',\n  proximity: { longitude: 0, latitude: 51.49 },\n  bbox: [-0.489, 51.28, 0.236, 51.686]\n}\n\nexport default () => {\n  const [category, setCategory] = useState('3 Bed')\n  const [colour, setColour] = useState('viridis')\n  const [priceRange, setPriceRange] = useState([0, 1])\n  const [budgetRange, setBudgetRange] = useState([0, 1])\n\n  const [data, setData] = useState(null)\n  const [hoveredFeature, setHoveredFeature] = useState(null)\n  const [clickedFeature, setClickedFeature] = useState(null)\n\n  const categories = ['Room', 'Studio', '1 Bed', '2 Bed', '3 Bed', '4+ Bed']\n\n  const [viewport, setViewport] = useState(\n    new WebMercatorViewport({\n      width: 800,\n      height: 600,\n      latitude: 51.49,\n      longitude: 0,\n      zoom: 8,\n      bearing: 0,\n      pitch: 40\n    })\n  )\n\n  const _onViewportChange = viewport => setViewport(viewport)\n\n  const _handleGeocoderSelect = result => {\n\n    let feature\n    if (result.id.indexOf('postcode') !== -1) {\n        feature = data.features.filter(\n          f => f.properties.district === result.text.split(' ').shift()\n        )[0]      \n    } else {\n      const matchingPostcodes = result.context.filter(res => res.id.indexOf('postcode') !== -1)\n      if (matchingPostcodes.length > 0) {\n        feature = data.features.filter(\n          f => f.properties.district === matchingPostcodes[0].text.split(' ').shift()\n        )[0]\n      } \n    }\n    if (feature) {\n      setHoveredFeature(feature)\n      setClickedFeature(feature)\n    }\n    const newViewport = {\n      ...viewport,\n      longitude: result.center[0],\n      latitude: result.center[1],\n      zoom: 11,\n      transitionDuration: 400,\n      transitionInterpolator: new FlyToInterpolator(),\n      transitionEasing: easeCubic\n    }\n    _onViewportChange(newViewport)\n  }\n\n  const _fitLondonBounds = () => {\n    const [minLng, minLat, maxLng, maxLat] = [-0.489, 51.28, 0.236, 51.686]\n    const { longitude, latitude, zoom } = viewport.fitBounds(\n      [[minLng, minLat], [maxLng, maxLat]],\n      {\n        padding: 40\n      }\n    )\n    const newViewport = {\n      ...viewport,\n      longitude: longitude,\n      latitude: latitude,\n      zoom: zoom,\n      transitionDuration: 400,\n      transitionInterpolator: new FlyToInterpolator(),\n      transitionEasing: easeCubic\n    }\n    _onViewportChange(newViewport)\n  }\n\n  useEffect(() => {\n    _fitLondonBounds()\n  }, [])\n\n  useEffect(() => {\n    if (data) {\n      const mins = data.features\n        .map(el => el.properties[category + '-pc_lower'])\n        .filter(el => el !== undefined)\n      const maxs = data.features\n        .map(el => el.properties[category + '-pc_upper'])\n        .filter(el => el !== undefined)\n      const min = Math.min(...mins)\n      const max = Math.max(...maxs)\n      setPriceRange([min, max])\n      setBudgetRange([min, max])\n    }\n  }, [data, category])\n\n  const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)')\n  const theme = React.useMemo(\n    () =>\n      createMuiTheme({\n        palette: {\n          type: prefersDarkMode ? 'dark' : 'light'\n        }\n      }),\n    [prefersDarkMode]\n  )\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Map\n        viewport={viewport}\n        setViewport={setViewport}\n        data={data}\n        setData={setData}\n        hoveredFeature={hoveredFeature}\n        setHoveredFeature={setHoveredFeature}\n        clickedFeature={clickedFeature}\n        setClickedFeature={setClickedFeature}\n        category={category}\n        colour={colour}\n        setColour={setColour}\n        budgetRange={budgetRange}\n      />\n\n      <div\n        id=\"panel\"\n        style={{\n          position: 'absolute',\n          background: '#333',\n          top: 0,\n          right: 0,\n          width: '48%',\n          height: '100vh',\n          overflowX: 'visible',\n          overflowY: 'scroll',\n          padding: '1rem'\n        }}\n      >\n        <MatGeocoder\n          inputPlaceholder=\"Search\"\n          accessToken={MAPBOX_TOKEN}\n          onSelect={result => _handleGeocoderSelect(result)}\n          showLoader={true}\n          {...geocoderApiOptions}\n        />\n\n        <CategoryChooser\n          categories={categories}\n          category={category}\n          setCategory={setCategory}\n        />\n\n        <RangeSlider\n          title=\"Price range\"\n          value={budgetRange}\n          theme={theme}\n          min={priceRange[0]}\n          max={priceRange[1]}\n          onChange={setBudgetRange}\n        />\n\n        <Rugplot\n          data={data}\n          hoveredFeature={hoveredFeature}\n          setHoveredFeature={setHoveredFeature}\n          setClickedFeature={setClickedFeature}\n          category={category}\n        />\n\n        <Boxplot\n          min={priceRange[0]}\n          max={priceRange[1]}\n          data={data}\n          clickedFeature={clickedFeature}\n          category={category}\n        />\n        <EnhancedTable\n          clickedFeature={clickedFeature}\n          data={data}\n          category={category}\n        />\n      </div>\n    </ThemeProvider>\n  )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nimport './scss/style.scss'\n\nconst rootElement = document.getElementById('root')\nReactDOM.render(<App />, rootElement)\n","// For more information on data-driven styles, see https://www.mapbox.com/help/gl-dds-ref/\nimport colormap from 'colormap'\n\n// eslint-disable-next-line\nconst viridis = colormap({ colormap: 'viridis', nshades: 10 }).map((el, i) => [\n  i,\n  el\n])\n\nexport const dataLayer = scheme => {\n  return {\n    beforeId: 'Suburban names',\n    id: 'data',\n    type: 'fill',\n    paint: {\n      'fill-color': {\n        property: 'percentile',\n        stops: eval(scheme) // eslint-disable-line\n      },\n      'fill-opacity': 0.8\n    }\n  }\n}\nexport const highlightLayer = scheme => {\n  return {\n    beforeId: 'Suburban names',\n    id: 'highlight',\n    type: 'fill-extrusion',\n    paint: {\n      'fill-extrusion-color': {\n        property: 'percentile',\n        stops: eval(scheme) // eslint-disable-line\n      },\n      'fill-extrusion-height': \n      {\n        property: 'percentile',\n        stops:  [[0,500],[1,1000],[2,1500],[3,2000],[4,2500],[5,3000],[6,4000],[7,4500],[8,5000],[9, 5500]] // eslint-disable-line\n      }\n    }\n  }\n}\n"],"sourceRoot":""}