{"version":3,"sources":["Map.jsx","utils.js","CategoryChooser.jsx","RangeSlider.jsx","Rugplot.jsx","Boxplot.jsx","EnhancedTable.jsx","App.jsx","index.js","map-style.js"],"names":["Map","props","viewport","setViewport","category","data","setData","hoveredFeature","setHoveredFeature","setClickedFeature","budgetRange","_useState","useState","_useState2","Object","slicedToArray","mapboxFilterBudgetRange","setMapboxFilterBudgetRange","_useState3","_useState4","filterHighlight","setFilterHighlight","useEffect","input","document","querySelector","inputParent","parentNode","onblur","style","boxShadow","overflow","onfocus","tabIndex","accessor","features","featureCollection","scale","scaleQuantile","domain","map","range","type","f","value","properties","objectSpread","percentile","updatePercentiles","filter","el","undefined","indexOf","district","react_default","a","createElement","height","esm","assign","width","mapStyle","onViewportChange","mapboxApiAccessToken","onHover","event","hoveredArea","find","layer","id","onClick","clickedFeature","scrollZoom","position","right","bottom","showCompass","dataLayer","colour","highlightLayer","useStyles","makeStyles","theme","toggleContainer","margin","spacing","text-align","color","palette","action","active","CategoryChooser","classes","Grid","item","xs","sm","md","className","Typography","variant","display","gutterBottom","ToggleButtonGroup","aria-labelledby","exclusive","onChange","val","setCategory","aria-label","categories","cat","i","ToggleButton","key","name","root","pad","padding","valuetext","concat","RangeSlider","Slider","newValue","valueLabelDisplay","getAriaValueText","min","step","max","title","Rugplot","d3Container","useRef","current","getMedian","geojsonFeature","svg","d3","colorScale","top","left","selectAll","xPos","Math","apply","toConsumableArray","getBoundingClientRect","callout","g","path","join","attr","text","call","split","d","_","_text$node$getBBox","node","getBBox","y","w","h","interpolateViridis","feature","enter","append","length","update","transition","exit","remove","format","select","tickFormat","tooltip","on","ref","Boxplot","postcode","postcodeData","yPos","medians","sort","b","stop","round","decileData","deciles","push","shift","pop","interpolator","boxEnter","selection","dataset","half","borough","textPos","boxUpdate","boxes","offset","stopColor","descendingComparator","orderBy","createDataRow","obj","predicate","fromEntries","entries","_ref","_ref2","includes","EnhancedTableHead","order","onRequestSort","headCells","numeric","disablePadding","label","TableHead","TableRow","headCell","TableCell","align","sortDirection","TableSortLabel","direction","property","visuallyHidden","paddingLeft","paddingRight","highlight","secondary","main","backgroundColor","lighten","light","primary","dark","flex","paper","marginBottom","border","clip","EnhancedTable","rows","objectfilter","search","_ref3","_ref4","k","reduce","acc","_ref5","_ref6","v","defineProperty","row","Area","_React$useState","React","_React$useState2","setOrder","_React$useState3","_React$useState4","setOrderBy","_React$useState5","_React$useState6","selected","setSelected","_React$useState7","_React$useState8","page","_React$useState9","dense","_React$useState11","_React$useState12","rowsPerPage","emptyRows","Paper","TableContainer","Table","table","size","numSelected","onSelectAllClick","target","checked","newSelecteds","n","rowCount","TableBody","array","comparator","stabilizedThis","index","stableSort","getComparator","slice","isItemSelected","labelId","hover","selectedIndex","newSelected","handleClick","role","aria-checked","values","cell","component","scope","colSpan","geocoderApiOptions","country","proximity","longitude","latitude","bbox","App","setColour","_useState5","_useState6","priceRange","setPriceRange","_useState7","_useState8","setBudgetRange","_useState9","_useState10","_useState11","_useState12","_useState13","_useState14","_useState15","WebMercatorViewport","zoom","bearing","pitch","_useState16","_onViewportChange","_viewport$fitBounds","fitBounds","newViewport","transitionDuration","transitionInterpolator","FlyToInterpolator","transitionEasing","easeCubic","_fitLondonBounds","mins","maxs","prefersDarkMode","useMediaQuery","useMemo","createMuiTheme","ThemeProvider","Map_Map","background","overflowX","overflowY","index_es","inputPlaceholder","accessToken","onSelect","result","matchingPostcodes","context","res","center","_handleGeocoderSelect","showLoader","CategoryChooser_CategoryChooser","RangeSlider_RangeSlider","Rugplot_Rugplot","Boxplot_Boxplot","EnhancedTable_EnhancedTable","rootElement","getElementById","ReactDOM","render","__webpack_require__","__webpack_exports__","colormap__WEBPACK_IMPORTED_MODULE_0__","colormap__WEBPACK_IMPORTED_MODULE_0___default","viridis","colormap","nshades","scheme","beforeId","paint","fill-color","stops","eval","fill-opacity","line-color","line-width","line-opacity"],"mappings":"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","file":"static/js/main.4ae80608.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport MapGL, { Source, Layer, NavigationControl } from 'react-map-gl'\nimport { dataLayer, highlightLayer } from './map-style'\nimport 'mapbox-gl/dist/mapbox-gl.css'\nimport { updatePercentiles } from './utils'\n\nconst MAPBOX_TOKEN =\n  'pk.eyJ1IjoiaHAtbnVuZXMiLCJhIjoiY2pqNHAxaHIxMDA3aTNrbW15OGx2NW4ybiJ9.pHzT2FAtpO-Xhnc3PzJsFA'\n\nexport const Map = props => {\n  const {\n    viewport,\n    setViewport,\n    category,\n    data,\n    setData,\n    hoveredFeature,\n    setHoveredFeature,\n    setClickedFeature,\n    budgetRange\n  } = props\n  const [mapboxFilterBudgetRange, setMapboxFilterBudgetRange] = useState(null)\n\n  const [filterHighlight, setFilterHighlight] = useState(['in', 'district', ''])\n\n  useEffect(() => {\n    if (budgetRange !== null)\n      setMapboxFilterBudgetRange([\n        'all',\n        ['>=', category + '-pc_median', budgetRange[0]],\n        ['<=', category + '-pc_median', budgetRange[1]]\n      ])\n  }, [budgetRange, category])\n\n  const _onViewportChange = viewport => setViewport(viewport)\n\n  // FOR KEYBOARD USERS: HIGHLIGHT MAP WHEN TABBED TO, RUN THIS EFFECT ONCE ONLY\n  useEffect(() => {\n    const input = document.querySelector('.mapboxgl-canvas')\n    const inputParent = input.parentNode.parentNode.parentNode.parentNode\n    input.onblur = inputBlur\n    input.onfocus = inputFocus\n    inputParent.tabIndex = -1\n\n    function inputBlur() {\n      document.querySelector('.overlays').style.boxShadow = ''\n      document.querySelector('#root').style.overflow = 'scroll'\n    }\n\n    function inputFocus() {\n      document.querySelector('.overlays').style.boxShadow =\n        'inset 0 0 2px 2px #0096ff'\n      document.querySelector('#root').style.overflow = 'hidden'\n    }\n  }, []) // empty dep array = run once\n\n  useEffect(() => {\n    const data = updatePercentiles(f => f.properties[category + '-pc_median'])\n    const getMedian = geojsonFeature =>\n      geojsonFeature.properties[category + '-pc_median']\n\n    data.features = data.features.filter(\n      el => ['', undefined].indexOf(getMedian(el)) === -1\n    )\n    setData(data)\n  }, [category]) // eslint-disable-line\n\n  useEffect(() => {\n    if (hoveredFeature !== null && hoveredFeature !== undefined) {\n      setFilterHighlight(['in', 'district', hoveredFeature.properties.district])\n    }\n  }, [hoveredFeature]) // eslint-disable-line\n\n  const _onHover = event => {\n    const { features } = event\n    const hoveredArea = features && features.find(f => f.layer.id === 'data')\n\n    if (hoveredArea !== null && hoveredArea !== undefined) {\n      setHoveredFeature(hoveredArea)\n      setClickedFeature(hoveredArea)\n    }\n  }\n\n  const _onClick = event => {\n    const { features } = event\n    const clickedFeature = features && features.find(f => f.layer.id === 'data')\n    setClickedFeature(clickedFeature)\n  }\n\n  return (\n    <div style={{ height: '100%' }}>\n      <MapGL\n        {...viewport}\n        category={props.category}\n        width=\"50%\"\n        height=\"100vh\"\n        mapStyle=\"./os_light.json\"\n        onViewportChange={_onViewportChange}\n        mapboxApiAccessToken={MAPBOX_TOKEN}\n        onHover={_onHover}\n        onClick={_onClick}\n        scrollZoom={false}\n      >\n        <div style={{ position: 'absolute', right: '1rem', bottom: '1rem' }}>\n          <NavigationControl showCompass={false} />\n        </div>\n        <Source type=\"geojson\" data={data}>\n          <Layer\n            {...dataLayer(props.colour)}\n            filter={mapboxFilterBudgetRange}\n          />\n          <Layer {...highlightLayer(props.colour)} filter={filterHighlight} />\n        </Source>\n      </MapGL>\n    </div>\n  )\n}\n","import { range } from 'd3-array'\nimport { scaleQuantile } from 'd3-scale'\n// import featureCollection from './data/london-private-rents-detailed.json'\nimport featureCollection from './data/london-private-rents.json'\n\n// ATTEMPT TO COMBINE JSON AND CSV\n// import featureCollection from './data/london-postcode-districts.json'\n// import csv from './data/london-private-rents.csv'\n\nexport function updatePercentiles(accessor) {\n  let { features } = featureCollection\n\n  // d3.csv(csv, d3.autoType).then(data => {\n  // features = features.map(feature => {\n  //   feature.properties = {\n  //     ...feature.properties,\n  //     ...data\n  //       .filter(district => district.district === feature.properties.district)\n  //       .pop()\n  //   }\n  //   if (feature) return feature\n  // })\n\n  const scale = scaleQuantile()\n    .domain(features.map(accessor))\n    .range(range(10))\n\n  const returnVal = {\n    type: 'FeatureCollection',\n    features: features.map(f => {\n      const value = accessor(f)\n      const properties = {\n        ...f.properties,\n        value,\n        percentile: scale(value)\n      }\n      return { ...f, properties }\n    })\n  }\n  return returnVal\n  // })\n}\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport ToggleButton from '@material-ui/lab/ToggleButton'\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup'\nimport { Grid, Typography } from '@material-ui/core'\n\nconst useStyles = makeStyles(theme => ({\n  toggleContainer: {\n    margin: theme.spacing(2, 0),\n    'text-align': 'center',\n    color: theme.palette.action.active\n  }\n}))\n\nexport const CategoryChooser = props => {\n  const classes = useStyles()\n\n  return (\n    <Grid item xs={12} sm={12} md={12}>\n      <div className={classes.toggleContainer}>\n        <Typography\n          id=\"range-label\"\n          variant=\"button\"\n          display=\"block\"\n          gutterBottom\n        >\n          Number of rooms\n        </Typography>\n        <ToggleButtonGroup\n          aria-labelledby=\"range-label\"\n          value={props.category}\n          exclusive\n          onChange={(event, val) => props.setCategory(val)}\n          aria-label=\"text alignment\"\n        >\n          {props.categories.map((cat, i) => (\n            <ToggleButton key={i} value={cat} name={cat}>\n              {cat}\n            </ToggleButton>\n          ))}\n        </ToggleButtonGroup>\n      </div>\n    </Grid>\n  )\n}\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Typography, Slider } from '@material-ui/core'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    'text-align': 'center',\n    margin: '1em 1em',\n    color: theme.palette.action.active\n  },\n  pad: {\n    padding: '2em 0 0'\n  }\n}))\n\nfunction valuetext(value) {\n  return `${value}`\n}\n\nexport const RangeSlider = props => {\n  const classes = useStyles(props.theme)\n\n  const handleChange = (event, newValue) => {\n    props.onChange(newValue)\n  }\n\n  return (\n    <div className={classes.root}>\n      <Slider\n        style={{ padding: '3rem 0 0' }}\n        value={props.value}\n        onChange={handleChange}\n        valueLabelDisplay=\"on\"\n        aria-labelledby=\"range-slider\"\n        getAriaValueText={valuetext}\n        min={props.min}\n        step={10}\n        max={props.max}\n      />\n      <Typography id=\"range-slider\" variant=\"button\" gutterBottom>\n        {props.title}\n      </Typography>\n    </div>\n  )\n}\n","import React, { useRef, useEffect } from 'react'\nimport * as d3 from 'd3'\n\nexport const Rugplot = props => {\n  /* The useRef Hook creates a variable that \"holds on\" to a value across rendering\n  passes. In this case it will hold our component's SVG DOM element. It's\n  initialized null and React will assign it later (see the return statement) */\n  const d3Container = useRef(null)\n\n  const {\n    data,\n    category,\n    hoveredFeature,\n    setHoveredFeature,\n    setClickedFeature\n  } = props\n\n  /* The useEffect Hook is for running side effects outside of React,\n  for instance inserting elements into the DOM using D3 */\n  useEffect(\n    () => {\n      if (data && d3Container.current) {\n        // HELPER for acessing geojson properties\n        const getMedian = geojsonFeature =>\n          geojsonFeature.properties[category + '-pc_median']\n\n        const { features } = data\n\n        const svg = d3.select(d3Container.current)\n\n        const xQuantile = d3\n          .scaleQuantile()\n          .domain(features.map(el => getMedian(el)))\n          .range(d3.range(10))\n\n        const colorScale = d3\n          .scaleQuantile()\n          .domain(features.map(el => getMedian(el)))\n          .range(d3.range(0, 1.1, 0.1))\n\n        const margin = { top: 0, right: 32, bottom: 0, left: 0 }\n\n        svg.selectAll('rect').data(features)\n\n        const xPos = d3\n          .scaleLinear()\n          .domain([\n            Math.min(\n              ...data.features\n                .map(el => el.properties[category + '-pc_lower'])\n                .filter(el => el !== undefined)\n            ),\n            Math.max(\n              ...data.features\n                .map(el => el.properties[category + '-pc_upper'])\n                .filter(el => el !== undefined)\n            )\n          ])\n          .range([\n            margin.left,\n            d3Container.current.getBoundingClientRect().width - margin.right\n          ])\n\n        const callout = (g, value) => {\n          if (!value) return g.style('display', 'none')\n\n          g.style('display', null)\n            .style('pointer-events', 'none')\n            .style('font', '10px sans-serif')\n\n          const path = g\n            .selectAll('path')\n            .data([null])\n            .join('path')\n            .attr('fill', 'white')\n\n          const text = g\n            .selectAll('text')\n            .data([null])\n            .join('text')\n            .call(text =>\n              text\n                .selectAll('tspan')\n                .data((value + '').split(/\\n/))\n                .join('tspan')\n                .attr('x', 0)\n                .attr('y', (d, i) => `${i * 1.1}em`)\n                .style('font-weight', (_, i) => (i ? null : 'bold'))\n                .text(d => d)\n            )\n\n          const { y, width: w, height: h } = text.node().getBBox()\n\n          text.attr('transform', `translate(${-w / 2},${y * 2})`)\n          path.attr(\n            'd',\n            `M${-w / 2 - 10},5H-5l5,5l5,-5H${w / 2 + 10}v-${h + 20}h-${w + 20}z`\n          )\n          path.attr('transform', `translate(0,${y * 1.1})`)\n        }\n\n        const interpolateViridis = feature =>\n          d3.interpolateViridis(colorScale(getMedian(feature)))\n\n        svg\n          .selectAll('rect')\n          .data(features)\n          .join(\n            enter => {\n              enter\n                .append('rect')\n                .attr('fill', feature => interpolateViridis(feature))\n                .attr('fill-opacity', 0.9)\n                .attr('x', feature => xPos(getMedian(feature)))\n                .attr('width', feature => 2)\n                .attr('y', feature => (feature.length !== 0 ? 0 : 0))\n                .attr('height', 20)\n            },\n            update => {\n              update\n                .transition()\n                .attr('x', feature => xPos(getMedian(feature)))\n                .attr('fill', feature => interpolateViridis(feature))\n            },\n            exit => exit.remove()\n          )\n\n        const format = d3.format('.2s')\n\n        const xAxis = svg =>\n          svg\n            .select('g#axis')\n            .attr('transform', `translate(0,20)`)\n//             .attr('style', `color:white`)\n            .call(d3.axisBottom(xPos).tickFormat(d => `£${format(d)}`))\n        svg.call(xAxis)\n\n        const tooltip = svg.select('g#tooltip')\n\n        svg\n          .selectAll('rect')\n          .on('touchmove mousemove', feature => {\n            tooltip\n              .attr('transform', `translate(${xPos(getMedian(feature))},0)`)\n              .call(callout, feature.properties['district'])\n            setHoveredFeature(feature)\n            setClickedFeature(feature)\n          })\n          .on('touchend mouseleave', () => tooltip.call(callout, null))\n          .on('click', feature => setClickedFeature(feature))\n\n        if (hoveredFeature) {\n          tooltip.call(callout, null)\n          tooltip\n            .attr(\n              'transform',\n              `translate(${xPos(getMedian(hoveredFeature))},0)`\n            )\n            .call(callout, hoveredFeature.properties['district'])\n        } else {\n          // ON FIRST LOAD (NO HOVER) CLICK 'SE1'\n          const feature = features.filter(\n            f => f.properties.district === 'SE1'\n          )[0]\n          setHoveredFeature(feature)\n          setClickedFeature(feature)\n        }\n      }\n    },\n    /*\n    useEffect has a dependency array (below). It's a list of dependency\n    variables for this useEffect block. The block will run after mount\n    and whenever any of these variables change. We still have to check\n    if the variables are valid, but we do not have to compare old props\n    to next props to decide whether to rerender.\n  */ [\n      data,\n      category,\n      hoveredFeature,\n      setHoveredFeature\n    ]\n  )\n\n  const style = {\n    width: '100%',\n    margin: '0 1em',\n    height: '38px',\n    overflow: 'visible',\n    position: 'relative'\n  }\n  return (\n    <svg style={style} ref={d3Container}>\n      <g id=\"tooltip\" />\n      <g id=\"axis\" />\n    </svg>\n  )\n}\n","import React, { useRef, useEffect } from 'react'\nimport * as d3 from 'd3'\nimport colormap from 'colormap'\n\nexport const Boxplot = props => {\n  /* The useRef Hook creates a variable that \"holds on\" to a value across rendering\n  passes. In this case it will hold our component's SVG DOM element. It's\n  initialized null and React will assign it later (see the return statement) */\n  const d3Container = useRef(null)\n\n  const { min, max, data, category, clickedFeature } = props\n\n  /* The useEffect Hook is for running side effects outside of React,\n  for instance inserting elements into the DOM using D3 */\n  useEffect(\n    () => {\n      if (data && d3Container.current && clickedFeature) {\n        const { properties } = clickedFeature\n        const svg = d3.select(d3Container.current)\n        const postcode = {}\n        postcode.postcodeData = [\n          [\n            properties[`${category}-pc_lower`],\n            properties[`${category}-pc_median`],\n            properties[`${category}-pc_upper`]\n          ],\n          [\n            properties[`${category}-borough_lower`],\n            properties[`${category}-borough_median`],\n            properties[`${category}-borough_upper`]\n          ],\n          [\n            properties[`${category}-london_lower`],\n            properties[`${category}-london_median`],\n            properties[`${category}-london_upper`]\n          ]\n        ]\n        const height = 100\n        const yPos = i => i * 30 + 10\n        const textPos = i => yPos(i) + 4\n        const margin = { top: 0, right: 32, bottom: 0, left: 0 }\n        const xPos = d3\n          .scaleLinear()\n          .domain([min, max])\n          .range([\n            margin.left,\n            d3Container.current.getBoundingClientRect().width - margin.right\n          ])\n        const format = d3.format('.2s')\n        const xAxis = g =>\n          g\n            .select('g.xAxis')\n            .attr('transform', `translate(0,${height})`)\n//             .attr('style', `color:white`)\n            .call(d3.axisBottom(xPos).tickFormat(d => `£${format(d)}`))\n        const reverseTicks = g =>\n          g\n            .selectAll('.xAxis .tick line')\n            .attr('y2', '0')\n            .attr('y1', -120)\n            .attr('stroke-opacity', 0.5)\n            .attr('stroke-dasharray', '2,2')\n            .attr('fill', 'white')\n        svg.call(xAxis)\n        svg.call(reverseTicks)\n\n        const getMedian = geojsonFeature =>\n          geojsonFeature.properties[category + '-pc_median']\n        const decile = 10\n        const medians = data.features\n          .map(feature => getMedian(feature))\n          .sort((a, b) => a - b)\n        const stop = Math.round(medians.length / decile)\n        const decileData = () => {\n          let deciles = []\n          for (let i = 1; i < decile; i = i + 1) {\n            deciles.push(medians[i * stop])\n          }\n          return deciles\n        }\n        const colorScale = d3\n          .scaleSequential()\n          .domain([decileData().shift(), decileData().pop()]) // input bounds\n          .interpolator(d3.interpolateViridis)\n\n        const boxEnter = (selection, dataset, className, half) => {\n          // LINEAR GRADIENT\n          const gradient = selection\n            .select('#gradientLinear')\n            .attr('x1', '0%')\n            .attr('y1', '0%')\n            .attr('x2', '100%')\n            .attr('y2', '0%')\n            .attr('gradientUnits', 'userSpaceOnUse')\n          //         // first stop on scale\n          //         gradient\n          //           .append('stop')\n          //           .attr('offset', '0%')\n          //           .attr('stop-color', '#440154')\n          //           .attr('class', 'start')\n\n          selection\n            .append('line')\n            .attr('stroke-width', `20px`)\n            .attr('stroke', `url(#gradientLinear)`)\n            .attr('class', className)\n            .attr('y1', (dataset, i) => yPos(i))\n            .attr('y2', (dataset, i) => yPos(i))\n            .transition()\n            .attr('x1', dataset =>\n              half === 1 ? xPos(dataset[0]) : xPos(dataset[2])\n            )\n            .attr('x2', dataset =>\n              half === 1 ? xPos(dataset[1]) - 0.25 : xPos(dataset[1]) + 0.25\n            )\n\n          if (half === 2) {\n            selection\n              .append('text')\n              .text((d, i) => {\n                switch (i) {\n                  case 0:\n                    return properties.district\n                  case 1:\n                    return properties.borough\n                  default:\n                    return 'London'\n                }\n              })\n              .attr('class', 'boxLabel')\n              .attr('x', d => xPos(d[2]) + 2)\n              .attr('y', (d, i) => textPos(i))\n              .style('text-anchor', 'start')\n//               .style('fill', 'white')\n          }\n\n          return selection\n        }\n\n        const boxUpdate = (selection, dataset, half) => {\n          // could be log\n          selection\n            .transition()\n            .attr('x1', dataset =>\n              half === 1 ? xPos(dataset[0]) : xPos(dataset[2])\n            )\n            .attr('x2', dataset =>\n              half === 1 ? xPos(dataset[1]) - 0.25 : xPos(dataset[1]) + 0.25\n            )\n\n          if (half === 2) {\n            svg\n              .selectAll('text.boxLabel')\n              .transition()\n              .attr('x', (d, i) => {\n                if (dataset[i][1] > max / 2) {\n                  return xPos(dataset[i][0] - 2)\n                } else {\n                  return xPos(dataset[i][2] + 2)\n                }\n              })\n              .style('text-anchor', (d, i) => {\n                if (dataset[i][1] > max / 2) {\n                  return 'end'\n                } else {\n                  return 'start'\n                }\n              })\n              .text((d, i) => {\n                switch (i) {\n                  case 0:\n                    return properties.district\n                  case 1:\n                    return properties.borough\n                  default:\n                    return 'London'\n                }\n              })\n          }\n\n          return selection\n        }\n\n        const boxes = (className, half) => {\n          svg\n            .selectAll('line.' + className, 'text')\n            .data(postcode.postcodeData)\n            .join(\n              enter => {\n                enter.call(boxEnter, postcode.postcodeData, className, half)\n              },\n              update => {\n                update.call(boxUpdate, postcode.postcodeData, half)\n              },\n              exit => exit.remove()\n            )\n        }\n        boxes('left', 1)\n        boxes('right', 2)\n\n        const gradients = () => {\n          svg\n            .select('#gradientLinear')\n            .selectAll('stop')\n            .data(decileData())\n            .join(\n              enter => {\n                enter\n                  .append('stop')\n                  .attr(\n                    'offset',\n                    d =>\n                      (xPos(d) /\n                        d3Container.current.getBoundingClientRect().width) *\n                        100 +\n                      '%'\n                  )\n                  .attr('stop-color', d => colorScale(d))\n              },\n              update => {\n                update\n                  .attr(\n                    'offset',\n                    d =>\n                      (xPos(d) /\n                        d3Container.current.getBoundingClientRect().width) *\n                        100 +\n                      '%'\n                  )\n                  .attr('stop-color', d => colorScale(d))\n              },\n              exit => exit.remove()\n            )\n        }\n        gradients()\n      }\n    },\n    /*\n      useEffect has a dependency array (below). It's a list of dependency\n      variables for this useEffect block. The block will run after mount\n      and whenever any of these variables change. We still have to check\n      if the variables are valid, but we do not have to compare old props\n      to next props to decide whether to rerender.\n    */ [\n      data,\n      category,\n      clickedFeature\n    ]\n  )\n\n  const style = {\n    width: '100%',\n    margin: '0 1em',\n    height: 'auto',\n    overflow: 'visible',\n    position: 'relative'\n  }\n  return (\n    <svg style={style} ref={d3Container}>\n      <g className=\"xAxis\" />\n      <defs>\n        <linearGradient id=\"gradientLinear\" />\n        <stop offset=\"0%\" stopColor=\"#440154\" className=\"start\"></stop>\n      </defs>\n    </svg>\n  )\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport clsx from 'clsx'\nimport { lighten, makeStyles } from '@material-ui/core/styles'\nimport FilterListIcon from '@material-ui/icons/FilterList'\n\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableSortLabel,\n  Toolbar,\n  Typography,\n  Paper,\n  IconButton,\n  Tooltip\n} from '@material-ui/core'\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1\n  }\n  return 0\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy)\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index])\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0])\n    if (order !== 0) return order\n    return a[1] - b[1]\n  })\n  return stabilizedThis.map(el => el[0])\n}\n\nfunction createHeadCells(properties, category) {\n  //   const returnVal = Object.keys(properties)\n  //     .filter(el => el.indexOf(category) > -1)\n  //     .map(el => ({\n  //       id: el,\n  //       numeric: isNumeric(properties[el]),\n  //       disablePadding: true,\n  //       label: el.replace('_', ' ')\n  //     }))\n  //   returnVal.unshift({\n  //     id: 'Area',\n  //     numeric: false,\n  //     disablePadding: true,\n  //     label: 'Area'\n  //   })\n  const returnVal = [\n    {\n      id: 'Area',\n      numeric: false,\n      disablePadding: true\n      //     label: 'Area'\n    },\n    {\n      id: 'Quartile lower',\n      numeric: true,\n      disablePadding: true,\n      label: 'Quartile lower'\n    },\n    {\n      id: 'Median',\n      numeric: true,\n      disablePadding: true,\n      label: 'Median'\n    },\n    {\n      id: 'Quartile higher',\n      numeric: true,\n      disablePadding: true,\n      label: 'Quartile higher'\n    }\n  ]\n  return returnVal\n}\n\nfunction createDataRow(properties, category) {\n  Object.filter = (obj, predicate) =>\n    Object.fromEntries(Object.entries(obj).filter(predicate))\n  return Object.filter(properties, ([key, val]) => key.includes(category))\n}\n\nfunction EnhancedTableHead(props) {\n  if (!props.data) {\n    return null\n  }\n\n  const { data, category, classes, order, orderBy, onRequestSort } = props\n  const createSortHandler = property => event => {\n    onRequestSort(event, property)\n  }\n\n  const headCells = createHeadCells(data.features[0].properties, category)\n\n  return (\n    <TableHead>\n      <TableRow>\n        {headCells.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  )\n}\n\nEnhancedTableHead.propTypes = {\n  data: PropTypes.object.isRequired,\n  category: PropTypes.string.isRequired,\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired\n}\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1)\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85)\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark\n        },\n  title: {\n    flex: '1 1 100%'\n  }\n}))\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles()\n  const { numSelected } = props\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography\n          className={classes.title}\n          color=\"inherit\"\n          variant=\"subtitle1\"\n          component=\"div\"\n        >\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography\n          className={classes.title}\n          variant=\"h6\"\n          id=\"tableTitle\"\n          component=\"div\"\n        >\n          Data\n        </Typography>\n      )}\n\n      <Tooltip title=\"Filter list\">\n        <IconButton aria-label=\"filter list\">\n          <FilterListIcon />\n        </IconButton>\n      </Tooltip>\n    </Toolbar>\n  )\n}\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%'\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2)\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1\n  }\n}))\n\nexport const EnhancedTable = props => {\n  const { data, category, clickedFeature } = props\n\n  // CONDITIONAL RENDERING\n  if (!props.data) {\n    return null\n  }\n\n  const objectfilter = (obj, search) =>\n    Object.entries(obj)\n      .filter(([k, v]) => k.includes(search))\n      .reduce((acc, [k, v]) => ({ ...acc, [k]: v }), {})\n\n  let rows\n  if (clickedFeature !== null && clickedFeature !== undefined) {\n    // ONE RECORD\n    const row = createDataRow(clickedFeature.properties, category)\n    rows = [\n      { Area: clickedFeature.properties.district, ...objectfilter(row, 'pc') },\n      {\n        Area: clickedFeature.properties.borough,\n        ...objectfilter(row, 'borough')\n      },\n      { Area: 'London', ...objectfilter(row, 'london') }\n    ]\n  } else {\n    // WHOLE DATASET\n    rows = data.features.map(el => createDataRow(el.properties, category))\n  }\n\n  const classes = useStyles()\n  const [order, setOrder] = React.useState('asc')\n  const [orderBy, setOrderBy] = React.useState('Room-district')\n  const [selected, setSelected] = React.useState([])\n  const [page, setPage] = React.useState(0)\n  const [dense] = React.useState(false)\n  const [rowsPerPage, setRowsPerPage] = React.useState(3)\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc'\n    setOrder(isAsc ? 'desc' : 'asc')\n    setOrderBy(property)\n  }\n\n  const handleSelectAllClick = event => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map(n => n.name)\n      setSelected(newSelecteds)\n      return\n    }\n    setSelected([])\n  }\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name)\n    let newSelected = []\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name)\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1))\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1))\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      )\n    }\n\n    setSelected(newSelected)\n  }\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage)\n  }\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10))\n    setPage(0)\n  }\n\n  const isSelected = name => selected.indexOf(name) !== -1\n\n  const emptyRows =\n    rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage)\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <TableContainer>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? 'small' : 'medium'}\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              data={data}\n              category={category}\n              classes={classes}\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n              {stableSort(rows, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  const isItemSelected = isSelected(row[index])\n                  const labelId = `enhanced-table-checkbox-${index}`\n                  return (\n                    <TableRow\n                      hover\n                      onClick={event => handleClick(event, row[index])}\n                      role=\"checkbox\"\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={index}\n                      selected={isItemSelected}\n                    >\n                      {Object.values(row).map((cell, index) => {\n                        let props = {\n                          key: index,\n                          align: 'right'\n                        }\n                        if (index > 0)\n                          props = {\n                            ...props,\n                            component: 'th',\n                            id: labelId,\n                            scope: 'row',\n                            padding: 'checkbox'\n                          }\n\n                        return <TableCell {...props}>{cell}</TableCell>\n                      })}\n                    </TableRow>\n                  )\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Paper>\n    </div>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport { Map } from './Map'\nimport { CategoryChooser } from './CategoryChooser'\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles'\nimport { RangeSlider } from './RangeSlider'\nimport { Rugplot } from './Rugplot'\nimport { Boxplot } from './Boxplot'\nimport { EnhancedTable } from './EnhancedTable'\nimport { useMediaQuery } from '@material-ui/core'\nimport { FlyToInterpolator, WebMercatorViewport } from 'react-map-gl'\nimport { easeCubic } from 'd3'\nimport MatGeocoder from 'react-mui-mapbox-geocoder'\n\n// import whyDidYouRender from '@welldone-software/why-did-you-render'\n\n// whyDidYouRender(React, {\n//   onlyLogs: true,\n//   titleColor: 'green',\n//   diffNameColor: 'darkturquoise'\n// })\n\n// Rugplot.whyDidYouRender = true\n// Map.whyDidYouRender = true\n\nconst MAPBOX_TOKEN =\n  'pk.eyJ1IjoiaHAtbnVuZXMiLCJhIjoiY2pqNHAxaHIxMDA3aTNrbW15OGx2NW4ybiJ9.pHzT2FAtpO-Xhnc3PzJsFA'\n\nconst geocoderApiOptions = {\n  country: 'gb',\n  proximity: { longitude: 0, latitude: 51.49 },\n  bbox: [-0.489, 51.28, 0.236, 51.686]\n}\n\nexport default () => {\n  const [category, setCategory] = useState('3 Bed')\n  const [colour, setColour] = useState('viridis')\n  const [priceRange, setPriceRange] = useState([0, 1])\n  const [budgetRange, setBudgetRange] = useState([0, 1])\n\n  const [data, setData] = useState(null)\n  const [hoveredFeature, setHoveredFeature] = useState(null)\n  const [clickedFeature, setClickedFeature] = useState(null)\n\n  const categories = ['Room', 'Studio', '1 Bed', '2 Bed', '3 Bed', '4+ Bed']\n\n  const [viewport, setViewport] = useState(\n    new WebMercatorViewport({\n      width: 800,\n      height: 600,\n      latitude: 51.49,\n      longitude: 0,\n      zoom: 8,\n      bearing: 0,\n      pitch: 0\n    })\n  )\n\n  const _onViewportChange = viewport => setViewport(viewport)\n\n  const _handleGeocoderSelect = result => {\n    let feature\n    if (result.id.indexOf('postcode') !== -1) {\n      feature = data.features.filter(\n        f => f.properties.district === result.text.split(' ').shift()\n      )[0]\n    } else {\n      const matchingPostcodes = result.context.filter(\n        res => res.id.indexOf('postcode') !== -1\n      )\n      if (matchingPostcodes.length > 0) {\n        feature = data.features.filter(\n          f =>\n            f.properties.district ===\n            matchingPostcodes[0].text.split(' ').shift()\n        )[0]\n      }\n    }\n    if (feature) {\n      setHoveredFeature(feature)\n      setClickedFeature(feature)\n    }\n    const newViewport = {\n      ...viewport,\n      longitude: result.center[0],\n      latitude: result.center[1],\n      zoom: 11,\n      transitionDuration: 400,\n      transitionInterpolator: new FlyToInterpolator(),\n      transitionEasing: easeCubic\n    }\n    _onViewportChange(newViewport)\n  }\n\n  const _fitLondonBounds = () => {\n    const [minLng, minLat, maxLng, maxLat] = [-0.489, 51.28, 0.236, 51.686]\n    const { longitude, latitude, zoom } = viewport.fitBounds(\n      [[minLng, minLat], [maxLng, maxLat]],\n      {\n        padding: 40\n      }\n    )\n    const newViewport = {\n      ...viewport,\n      longitude: longitude,\n      latitude: latitude,\n      zoom: zoom,\n      transitionDuration: 400,\n      transitionInterpolator: new FlyToInterpolator(),\n      transitionEasing: easeCubic\n    }\n    _onViewportChange(newViewport)\n  }\n\n  useEffect(() => {\n    _fitLondonBounds()\n  }, [])\n\n  useEffect(() => {\n    if (data) {\n      const mins = data.features\n        .map(el => el.properties[category + '-pc_lower'])\n        .filter(el => el !== undefined)\n      const maxs = data.features\n        .map(el => el.properties[category + '-pc_upper'])\n        .filter(el => el !== undefined)\n      const min = Math.min(...mins)\n      const max = Math.max(...maxs)\n      // possible lowest/highest\n      setPriceRange([min, max])\n      // user lowest/highest\n      setBudgetRange([min, max])\n    }\n  }, [data, category])\n\n  const prefersDarkMode = useMediaQuery('(prefers-color-scheme: light)')\n  const theme = React.useMemo(\n    () =>\n      createMuiTheme({\n        palette: {\n          type: prefersDarkMode ? 'dark' : 'light'\n        }\n      }),\n    [prefersDarkMode]\n  )\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Map\n        viewport={viewport}\n        setViewport={setViewport}\n        data={data}\n        setData={setData}\n        hoveredFeature={hoveredFeature}\n        setHoveredFeature={setHoveredFeature}\n        clickedFeature={clickedFeature}\n        setClickedFeature={setClickedFeature}\n        category={category}\n        colour={colour}\n        setColour={setColour}\n        budgetRange={budgetRange}\n      />\n\n      <div\n        id=\"panel\"\n        style={{\n          position: 'absolute',\n          background: '#eee',\n          top: 0,\n          right: 0,\n          width: '48%',\n          height: '100vh',\n          overflowX: 'visible',\n          overflowY: 'scroll',\n          padding: '1rem'\n        }}\n      >\n        <MatGeocoder\n          inputPlaceholder=\"Search\"\n          accessToken={MAPBOX_TOKEN}\n          onSelect={result => _handleGeocoderSelect(result)}\n          showLoader={true}\n          {...geocoderApiOptions}\n        />\n\n        <CategoryChooser\n          categories={categories}\n          category={category}\n          setCategory={setCategory}\n        />\n\n        <RangeSlider\n          title=\"Price range\"\n          value={budgetRange}\n          theme={theme}\n          min={priceRange[0]}\n          max={priceRange[1]}\n          onChange={setBudgetRange}\n        />\n\n        <Rugplot\n          data={data}\n          hoveredFeature={hoveredFeature}\n          setHoveredFeature={setHoveredFeature}\n          setClickedFeature={setClickedFeature}\n          category={category}\n        />\n\n        <Boxplot\n          min={priceRange[0]}\n          max={priceRange[1]}\n          data={data}\n          clickedFeature={clickedFeature}\n          category={category}\n        />\n        <EnhancedTable\n          clickedFeature={clickedFeature}\n          data={data}\n          category={category}\n        />\n      </div>\n    </ThemeProvider>\n  )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nimport './scss/style.scss'\n\nconst rootElement = document.getElementById('root')\nReactDOM.render(<App />, rootElement)\n","// For more information on data-driven styles, see https://www.mapbox.com/help/gl-dds-ref/\nimport colormap from 'colormap'\n\n// eslint-disable-next-line\nconst viridis = colormap({\n  colormap: 'viridis',\n  nshades: 10\n}).map((el,i)=>[i, el])\n\nexport const dataLayer = scheme=>{\n  return {\n    beforeId: 'Suburban names',\n    id: 'data',\n    type: 'fill',\n    paint: {\n      'fill-color': {\n        property: 'percentile',\n        stops: eval(scheme)// eslint-disable-line\n      },\n      'fill-opacity': 0.8\n    }\n  }\n}\nexport const highlightLayer = scheme=>{\n  return {\n    beforeId: 'Suburban names',\n    id: 'highlight',\n    type: 'line',\n    paint: {\n\n      'line-color': '#fff',\n      'line-width': 1,\n      'line-opacity': 1 \n    }\n  }\n}\n"],"sourceRoot":""}